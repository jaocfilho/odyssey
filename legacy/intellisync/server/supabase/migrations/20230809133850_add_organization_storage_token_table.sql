create table "public"."organization_storage_tokens" (
    "id" bigint generated by default as identity not null,
    "storage_token_amount" bigint not null default '0'::bigint,
    "remaining_storage_tokens" bigint not null default '0'::bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "organization_id" uuid not null
);


alter table "public"."organization_storage_tokens" enable row level security;

CREATE UNIQUE INDEX organization_storage_tokens_pkey ON public.organization_storage_tokens USING btree (id);

alter table "public"."organization_storage_tokens" add constraint "organization_storage_tokens_pkey" PRIMARY KEY using index "organization_storage_tokens_pkey";

alter table "public"."organization_storage_tokens" add constraint "organization_storage_tokens_organization_id_fkey" FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE not valid;

alter table "public"."organization_storage_tokens" validate constraint "organization_storage_tokens_organization_id_fkey";


